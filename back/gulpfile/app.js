let express=require("express"),app=express(),server=require("http").createServer(app),io=require("socket.io").listen(server),recipes=require("./routes/recipes"),mongoose=require("mongoose"),search=require("./routes/search"),authRouter=require("./routes/authRouter"),ip=require("ip"),ChatSchema=require("./models/Chat"),user=require("./models/User");mongoose.Promise=global.Promise,mongoose.connect("mongodb://localhost/recipes").then(()=>console.log("connection succesful bravo !")).catch(e=>console.error(e)),app.use(function(e,o,s){o.setHeader("Access-Control-Allow-Origin","http://localhost:4200"),o.setHeader("Access-Control-Allow-Methods","GET, POST, OPTIONS, PUT, PATCH, DELETE"),o.setHeader("Access-Control-Allow-Headers","X-Requested-With,content-type"),o.setHeader("Access-Control-Allow-Credentials",!0),s()}),app.use(express.json()),require("./config/passport"),app.use("/search",search),app.use("/recipes",recipes),app.use("/authRouter",authRouter),io.on("connection",e=>{console.log("user connected"),e.on("subscribe",function(o){console.log("join realised !"),e.join(o.room)}),e.on("message",function(e){console.log("message : "+e.message),io.in(e.room).emit("new message",{message:e.message})}),e.on("unsubscribe",function(o){e.leave(o.room)}),e.on("save_message",function(e){new Chat({room:e.room,writter:{_id:new ObjectId(e.writter._id),name:e.writter.name},message:e.message,creationDate:new Date,seen:!1}).save(function(o,s){o&&console.log(o),io.to(e.room).emit("new_message",s)})}),e.emit("news",{hello:"world"}),e.on("my other event",function(e){console.log(e)})}),app.get("/chatroom/:room",(e,o,s)=>{let r=e.params.room;chatRooms.find({name:r}).toArray((e,s)=>{if(e)return console.log(e),!1;o.json(s[0].messages)})}),server.listen(8080,()=>{console.log("started on port 8080")});